# Default values file for Bert-E helm chart.

## nameOverride allows to change the name of the release
## rather than default value 'bert-e'
nameOverride: "bert-e"

## useShortName shorten names of Kubernetes resources.
##
##   The release name will not be included in fullname. This
##   is safe to use only if one release only of Bert-E is deployed
##   per namespace (which is the typical use case).
##
useShortNames: false

## Bert-E will run on the repository and with the settings declared here.
bertE:
  ## verbose raises the level of debug printed in the logs
  ##
  ##   defaults to false.
  ##
  verbose: false

  ## sentryDsn can be declared to send the robot backtraces to a sentry account.
  ##
  ##   If different from "", python exceptions will be captured and sent to
  ##   sentry, which is an external service responsible for capturing tracebacks
  ##   and sending mails to operators. The value should be a URL that points to
  ##   a dsn sentry resource.
  ##
  ##   default value: "" (the feature is inactive)
  ##
  sentryDsn: ""

  ## repository stores details on the repository to work on
  repository:
    ## gitHost designates one of the supported Git host (bitbucket/github).
    ##
    gitHost: github

    ## owner contains the name of the team or project on the Git host.
    ##
    ##   On GitHub, this value is also known as 'organization'.
    ##
    owner: scality

    ## slug contains the name of the repository.
    ##
    ##   The duet owner/slug is sometimes designated as the
    ##   fullname of the repository on the Git host.
    ##
    slug: bert-e

  ## Bert-E impersonation details on Git host.
  ##
  ##   Bert-E will interact with the repository via a user on the Git host.
  ##   This user should be configured as an adminitrator of the repository
  ##   (fast method), or at least have full access to the branches the robot
  ##   handles (check documentation).
  robot:
    ## username is a valid user handle on the Git host.
    ##
    ##   This user will act as the robot and will:
    ##   - comment pull requests to indicate the progress of the merge,
    ##   - merge feature branches to development/* branches.
    ##
    ##   The user must have the correct permissions in Bitbucket/GitHub
    ##   to allow those operations (it is typically the only user allowed
    ##   to merge to development/* branches).
    ##
    username: "a_user_handle"

    ## email contains one email of the user on the Git host.
    ##
    ##   This email will be referenced in the Git merge commits created
    ##   by the robot.
    ##
    ##
    email: "a_user_email"

    ## password contains the password of the user on the Git host.
    ##
    password: "a_secret_password"

    ## frontend_url contains the url where the running bert-e's UI is reachable
    ##
    ##   This URL will be provided in the init messages for each PR.
    ##
    frontend_url:

  ## Authentication details for webhook.
  ##
  ##   Bert-E wakes up on wehooks received from the git host, which must be
  ##   configured by an administrator of the repository. Requests are
  ##   authenticated with basic auth.
  webhook:
    ## username is the basic auth username accepted by Bert-E.
    ##
    ##   defaults to "dummy"
    ##
    username: "dummy"

    ## password is the basic auth password accepted by Bert-E.
    ##
    ##   defaults to "dummy"
    ##
    password: "dummy"

  ## Authentication details for management tools page and API.
  ##
  ##   Bert-E allows users to authenticate via the OAuth of the git
  ##   host. Authenticated users can access the API and the management
  ##   page on the server. Additionally, users in the admin list will
  ##   access the admin levels tools on the management page.
  oauth:
    ## clientId is the id of a OAuth consumer defined on the Git host.
    ##
    clientId: "a_valid_oauth_client_id"

    ## clientSecret is the corresponding OAuth consumer secret.
    ##
    clientSecret: "a_valid_oauth_client_secret"

    ## organization restricts who can login by checking the user email suffix.
    ##
    ##   defaults to "" (email suffix is not checked)
    ##
    organization: ""

  ## Bert-E will use the settings in the gating section below
  ## to make the decision whether some code is ready be merged or not.
  gating:
    ## always_create_integration_pull_requests decides whether integration
    ## pull requests are created in addition to integration branches.
    ##
    ##   Bert-E will create pull requests on integration branches by default.
    ##   You can set this setting to false if you don't wan't any integration
    ##   pull requests to be created automatically. You can then, create them on
    ##   demand by using the `create_pull_requests` option.
    ##
    ##   default value: true
    ##
    alwaysCreateIntegrationPullRequests: true

    ## buildKey is the label of the key to look for in commit statuses.
    ##
    ##   default value: pre-merge
    ##
    buildKey: "github_actions"

    ## needAuthorApproval specifies whether pull requests need to be approved
    ## by their authors to be merged.
    ##
    ##   Not supported on Github (will be forced to false)
    ##
    ##   default value: true
    ##
    needAuthorApproval: true

    ## requiredPeerApprovals is the number of approvals required in each
    ## pull-request in addition to the author.
    ##
    ##   values: 0 or more
    ##
    ##   default value: 2
    ##
    requiredPeerApprovals: 2

    ## requiredProjectLeaderApprovals is the number of leader approvals
    ## required in the pull-request in addition to author.
    ##
    ##   Each leader approvals count as a normal peer approval as well.
    ##
    ##   values: 0 or more; must be lower or equal to required_peer_approvals.
    ##
    ##   default value: 0
    ##
    requiredProjectLeaderApprovals: 0

    ## projectAdmins is the list of handles allowed to post privileged messages
    ## to configure the behaviour of Bert-E in each pull request.
    ##
    ##   default value: []
    ##
    projectAdmins: []

    ## projectLeaders is the list of handles which count in the leader
    ## approvals count.
    ##
    ##   default value: []
    ##     if required_leader_approvals is set, there must be a greater
    ##     or equal number of handles in that list.
    ##
    projectLeaders: []

    ## tasks is a list of tasks to create automatically on new pull requests.
    ##
    ##   Not supported on GitHub.
    ##
    ##   default value: empty
    ##
    tasks: []

    ## maxCommitDiff specifies the maximum authorized divergence from target branches.
    ##
    ##   If > 0, the robot refuses to work on pull requests that have diverged with
    ##   their destination branch by more that `maxCommitDiff` commits.
    ##
    ##   default value: 0 (the feature is inactive)
    ##
    maxCommitDiff: 0

    ## disableVersionChecks specifies whether the issue tracker's version
    ## checks should be disabled.
    ##
    ##   Only relevant if jira projects are set
    ##
    ##  default value: false
    ##
    disableVersionChecks: false

  ## Bert-E can optionnaly check that a Jira ticket exists and is in the expected
  ## correct state before agreeing on merging some code.
  jira:
    ## enabled specifies whether Jira checks should be activated or not.
    ##
    ##   When enabled, fill in the other fields below. Otherwise, skip to
    ##   the next section.
    ##
    ##   default value: false
    ##
    enabled: false

    ## accountUrl is the url of the Jira account.
    ##
    accountUrl: "https://myaccount.atlassian.net"

    ## the jira email to use to retrieve information from Jira.
    ##
    email: "a_jira_account"

    ## token is the API token of the Jira account.
    ##
    token: "jira_token"

    ## acceptedProjectKeys is the list of accepted Jira keys for this project.
    ##
    ##   With an empty list, no Jira checks will be performed.
    ##
    ##   default value: []
    ##
    acceptedProjectKeys: []

    ## bypassedBranchPrefixes is a list branch prefixes that are
    ## automatically bypassed during the issue tracker related checks.
    ##
    ##   default value: []
    ##
    bypassedBranchPrefixes: []

    ## issueTypeToBranchPrefixes is a dictionnary of expected match
    ## between the Jira issue type and branch prefix.
    ##
    ##   When empty: the branch prefix is not checked.
    ##
    ##   default value: {}
    ##
    issueTypeToBranchPrefixes: {}

  ## prAuthorOptions is a dictionnary of users with specific bypass
  ##
  ##   When empty: the options in not checked.
  ##
  ##   default value: {}
  ##
  prAuthorOptions: {}
#    username:
#      - bypass_author
#      - bypass_jira_check

  addon:
    ## Bitbucket addon details (link to Bert-E in side bar)
    bitbucket:
      baseUrl: ""
      clientId: ""
      url: ""

## Bert-E container image
image:
  ## regitry to pull from.
  ##
  registry: registry.scality.com

  ## repository on the registry to pull from.
  ##
  repository: bert-e/bert-e

  ## tag specifies the version of Bert-E to deploy.
  ##
  tag: 3.6.23

  ## pullPolicy specifies the image pull policy
  ##
  ##   Defaults to 'IfNotPresent'
  ##
  pullPolicy: IfNotPresent

  ## pullsecrets specifies a list of imagePullSecrets.
  ##
  ##   Secrets must be manually created in the namespace.
  ##
  pullSecrets: []


## Kubernetes deployment configuration
deployment:
  # Setup env vars on the deployment
  env: {}
    # MY_VAR: MY_VALUE

  ## Configure extra options for liveness and readiness probes
  livenessProbe:
    initialDelaySeconds: 120
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  ## Configure the ingress resource that allows you to access the service.
  ingress:
    ## enabled sets the ingress record generation or not.
    ##
    ##   Defaults to false.
    ##
    enabled: false

    ## fqdn is the protocol/hostname to be covered with this ingress record.
    ##
    fqdn: "http://bert-e.local"

    ## path contains the subpath where to access the HTTP service.
    ##
    ##   Defaults to '/'.
    ##
    path: "/"

    ## tls is set to true in order to enable TLS on the ingress record.
    ##
    ##   Defaults to false.
    ##
    tls: false

    ## tlsSecret specifies a secret that contains the key/certificate for TLS
    ##
    tlsSecret: "bert-e-tls-secret"

    ## annotations contains the Ingress annotations done as key:value pairs
    ##
    annotations: {}

  ## service port
  ##
  ##   Defaults to 5000
  ##
  servicePort: 5000

  ## Configure resource requests and limits
  resources:
    requests:
      memory: 512Mi
      cpu: 300m

  ## Node labels for pod assignment
  ##
  nodeSelector: {}

  ## Tolerations for pod assignment
  ##
  tolerations: []

  ## Affinity for pod assignment
  ##
  affinity: {}
